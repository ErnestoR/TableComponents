{"ast":null,"code":"import _objectSpread from \"/Users/eramirez/Sites/TableComponents/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/eramirez/Sites/TableComponents/src/examples/SimpleTable.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useMemo } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useTable } from \"react-table\";\nimport Table from \"../components/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar useLoads = function useLoads(params) {\n  _s();\n\n  var _params$page, _params$page2;\n\n  return useQuery([\"carriers/loads\", params === null || params === void 0 ? void 0 : (_params$page = params.page) === null || _params$page === void 0 ? void 0 : _params$page.number, params === null || params === void 0 ? void 0 : (_params$page2 = params.page) === null || _params$page2 === void 0 ? void 0 : _params$page2.size], function () {\n    return axios.get(\"/carriers/loads\");\n  }, {\n    keepPreviousData: true,\n    refetchOnWindowFocus: false\n  });\n};\n\n_s(useLoads, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nvar SimpleTable = function SimpleTable() {\n  _s2();\n\n  var data = useMemo(function () {\n    return [{\n      col1: \"Hello\",\n      col2: \"World\"\n    }, {\n      col1: \"react-table\",\n      col2: \"rocks\"\n    }, {\n      col1: \"whatever\",\n      col2: \"you want\"\n    }];\n  }, []);\n  var columns = useMemo(function () {\n    return [{\n      Header: \"Column 1\",\n      accessor: \"col1\" // accessor is the \"key\" in the data\n\n    }, {\n      Header: \"Column 2\",\n      accessor: \"col2\"\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Table.Query, {\n    query: useLoads,\n    children: /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      style: {\n        border: \"solid 1px blue\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                style: {\n                  borderBottom: \"solid 3px red\",\n                  background: \"aliceblue\",\n                  color: \"black\",\n                  fontWeight: \"bold\"\n                },\n                children: column.render(\"Header\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: rows.map(function (row) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                style: {\n                  padding: \"10px\",\n                  border: \"solid 1px gray\",\n                  background: \"papayawhip\"\n                },\n                children: cell.render(\"Cell\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(SimpleTable, \"2b5wnfeY9dVzvisK3150+Y51tSE=\", false, function () {\n  return [useTable];\n});\n\n_c = SimpleTable;\nexport default SimpleTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleTable\");","map":{"version":3,"sources":["/Users/eramirez/Sites/TableComponents/src/examples/SimpleTable.js"],"names":["axios","useMemo","useQuery","useTable","Table","useLoads","params","page","number","size","get","keepPreviousData","refetchOnWindowFocus","SimpleTable","data","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useMemo } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useTable } from \"react-table\";\n\nimport Table from \"../components/Table\";\n\nconst useLoads = (params) => {\n  return useQuery(\n    [\"carriers/loads\", params?.page?.number, params?.page?.size],\n    () => axios.get(\"/carriers/loads\"),\n    {\n      keepPreviousData: true,\n      refetchOnWindowFocus: false\n    }\n  );\n};\n\nconst SimpleTable = () => {\n  const data = useMemo(\n    () => [\n      {\n        col1: \"Hello\",\n        col2: \"World\"\n      },\n      {\n        col1: \"react-table\",\n        col2: \"rocks\"\n      },\n      {\n        col1: \"whatever\",\n        col2: \"you want\"\n      }\n    ],\n    []\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Column 1\",\n        accessor: \"col1\" // accessor is the \"key\" in the data\n      },\n      {\n        Header: \"Column 2\",\n        accessor: \"col2\"\n      }\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({ columns, data });\n\n  return (\n    <Table.Query query={useLoads}>\n      <table {...getTableProps()} style={{ border: \"solid 1px blue\" }}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps()}\n                  style={{\n                    borderBottom: \"solid 3px red\",\n                    background: \"aliceblue\",\n                    color: \"black\",\n                    fontWeight: \"bold\"\n                  }}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: \"10px\",\n                        border: \"solid 1px gray\",\n                        background: \"papayawhip\"\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Table.Query>\n  );\n};\n\nexport default SimpleTable;\n"]},"metadata":{},"sourceType":"module"}